pipeline {
    agent {
        kubernetes {
            yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            name: dpp-mx-jenkins-iac-agent
        spec:
          containers:
          - name: dpp-mx-jenkins-iac-agent
            image: 998585994771.dkr.ecr.us-east-1.amazonaws.com/dpp-mx-jenkins-iac-agent:latest
            command:
            - cat
            tty: true
            volumeMounts:
              - name: dockersock
                mountPath: "/var/run/docker.sock"
          volumes:
            - name: dockersock
              hostPath:
                path: /var/run/docker.sock
      '''
        }
    }

    parameters {
        choice(name: 'ENV', choices: ['dev', 'uat', 'prod'], description: 'Selected environment for deployment')
        booleanParam(name: 'TEST', defaultValue: true, description: 'Select this for dry run (only plan command)')
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('DPP_AWS_SECRET_ACCESS_ID')
        AWS_SECRET_ACCESS_KEY = credentials('DPP_AWS_SECRET_ACCESS_KEY')
        AWS_REGION = 'us-east-1'
    }

    stages {
        stage('Terraform/Helm Deploy') {
            steps {
                container('dpp-mx-jenkins-iac-agent') {
                    withCredentials([gitUsernamePassword(credentialsId: 'dpp-github-service-user', gitToolName: 'Default')]) {
                       dir('digital-pharmacy/jenkins/logging-agent') {
                            sh '''
                            echo 'Logging in to EKS cluster'
                            /bin/sh ../tasks/aws-configure.sh
                            echo 'Generating kubeconfig'
                            # aws eks --region ${AWS_REGION} update-kubeconfig --name digital-pharmacy-$ENV-cluster
                            /bin/sh ../tasks/terraform-deploy.sh
                            /bin/sh ../tasks/helm-deploy.sh
                            '''
                        }
                    }
                }
            }
        }
    }
}
