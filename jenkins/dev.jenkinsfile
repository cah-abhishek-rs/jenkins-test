pipeline {
    agent {
        kubernetes {
            yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            name: dpp-mx-jenkins-iac-agent
        spec:
          containers:
          - name: dpp-mx-jenkins-iac-agent
            image: 998585994771.dkr.ecr.us-east-1.amazonaws.com/dpp-mx-jenkins-iac-agent:latest
            command:
            - cat
            tty: true
            volumeMounts:
              - name: dockersock
                mountPath: "/var/run/docker.sock"
          - name: dpp-mx-jenkins-app-agent
            image: 998585994771.dkr.ecr.us-east-1.amazonaws.com/dpp-mx-jenkins-app-agent:latest
            command:
            - cat
            tty: true
            volumeMounts:
              - name: dockersock
                mountPath: "/var/run/docker.sock"
          volumes:
            - name: dockersock
              hostPath:
                path: /var/run/docker.sock
      '''
        }
    }

    parameters {
        choice(name: 'ENV', choices: ['dev', 'uat', 'prod'], description: 'Selected environment for deployment')
    }

    environment {
        ENV                   = 'dev'
        GIT_BRANCH            = "${env.GIT_BRANCH}"
        GIT_COMMIT_ID         = "${env.GIT_COMMIT}"
        PROJECT_NAME          = "MX-DIGITAL-PHARMACY-GATEWAY"
        AWS_ACCESS_KEY_ID     = credentials('DPP_AWS_SECRET_ACCESS_ID')
        AWS_SECRET_ACCESS_KEY = credentials('DPP_AWS_SECRET_ACCESS_KEY')
        AWS_REGION            = 'us-east-1'
        ADC_DOCKER_USER       = credentials('DPP_MX_ART_SA_USER')
        ADC_DOCKER_PASSWORD   = credentials('DPP_MX_ART_SA_PASS')
        VERACODE_API_ID       = credentials('VERACODE_API_ID')
        VERACODE_API_KEY      = credentials('VERACODE_API_KEY')
        VC_APP_NAME           = 'mscripts-dpp-api-gateway'
        VC_SANDBOX_NAME       = 'Development'
        EKS_CLUSTER_NAME      = "digital-pharmacy-dev-cluster"
        VALUES_FILE_PATH      = "charts/eks-deployment/dev.values.yaml"
        SLACK_WEB_HOOK_URL    = credentials('SLACK_WEB_HOOK_URL')
        SLACK_MSG             = ""
        SLACK_CHANNEL         = "#test-dpp-gateway"
        SERVICE_IMAGE         = "998585994771.dkr.ecr.us-east-1.amazonaws.com/dpp-mx-gateway:${ENV}-${env.GIT_COMMIT}-${env.BUILD_NUMBER}"
    }

    stages {
        stage('Source Jenkins Tasks') {
            steps {
                container('dpp-mx-jenkins-iac-agent'){
                    withCredentials([gitUsernamePassword(credentialsId: 'DPP_JENKINS_GITHUB_SECRET_USER', gitToolName: 'Default')]) {
                        sh '''
                            /bin/sh jenkins/tasks/setup.sh
                        '''
                    }
                }
            }
        }

        stage('Run Test Cases') {
            steps {
                container('dpp-mx-jenkins-app-agent') {
                    script {
                        try {
                            echo 'RUNNING UNIT TEST CASES..'
                            sh '''
                                /bin/sh pipeline-tools-jenkins/jenkins/tasks/test/test.sh
                            '''
                        }
                        catch (exc) {
                            echo 'UNIT TEST CASES FAILED!'
                            currentBuild.result = 'FAILURE'
                        }
                    }  
                }
            }
        }

        stage('Veracode scan') {
            steps {
                veracode applicationName: 'mscripts-dpp-api-gateway', criticality: 'VeryHigh', deleteIncompleteScanLevel: '0', fileNamePattern: '*', replacementPattern: '', sandboxName: 'Development', scanExcludesPattern: '', scanIncludesPattern: '**/**.jar', scanName: 'test-dpp', teams: '', uploadIncludesPattern: '**/**.jar', vid: 'VERACODE_API_ID', vkey: 'VERACODE_API_KEY'
               // veracode applicationName: '${VC_APP_NAME}', criticality: 'VeryHigh', deleteIncompleteScanLevel: '0', fileNamePattern: '*', replacementPattern: '', sandboxName: '${VC_SANDBOX_NAME}', scanExcludesPattern: '', scanIncludesPattern: '**/**.jar', scanName: '$buildnumber-$timestamp', teams: '${VERACODE_TEAMS}', uploadIncludesPattern: '**/**.jar', vid: ' ${VERACODE_API_ID}', vkey: '${VERACODE_API_KEY}'
            }
        }
    }

  
// /bin/sh pipeline-tools-jenkins/jenkins/tasks/slack/notification.sh
    post {
        failure {
            container('dpp-mx-jenkins-iac-agent'){
                    sh '''
                        echo $SLACK_WEB_HOOK_URL $SLACK_CHANNEL
                         curl -X POST -H 'Content-type: application/json' --data '{"text": "test", "channel" : ${SLACK_CHANNEL}}' ${SLACK_WEB_HOOK_URL}

                    '''
            }
        }

        success {
            container('dpp-mx-jenkins-iac-agent'){
                    sh '''
                        echo $SLACK_WEB_HOOK_URL $SLACK_CHANNEL
                         curl -X POST -H 'Content-type: application/json' --data '{"text": "test", "channel" : ${SLACK_CHANNEL}}' ${SLACK_WEB_HOOK_URL}

                    '''
            }
        }
    }
}

