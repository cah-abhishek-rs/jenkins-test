pipeline {
    agent {
    kubernetes {
      yaml """
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            name: dpp-mx-jenkins-agent
        spec:
          containers:
          - name: dpp-mx-jenkins-agent
            image: 998585994771.dkr.ecr.us-east-1.amazonaws.com/dpp-mx-jenkins-agent:latest
            command:
            - cat
            tty: true
            volumeMounts:
              - name: dockersock
                mountPath: "/var/run/docker.sock"
          volumes:
            - name: dockersock
              hostPath:
                path: /var/run/docker.sock
      """
    }
  }
    environment {
        AWS_ACCESS_KEY_ID     = credentials('DPP_AWS_SECRET_ACCESS_ID')
        AWS_SECRET_ACCESS_KEY = credentials('DPP_AWS_SECRET_ACCESS_KEY')
        GITHUB_TOKEN = credentials('dpp-github-service-user')
        AWS_REGION = 'us-east-1'
    }
    stages {
        stage('Test') {
            steps {
                container('dpp-mx-jenkins-agent') {
                withCredentials([string(credentialsId: 'dpp-github-service-user', variable: 'GITHUB_TOKEN')]) {
               sh """
                    echo "${GITHUB_TOKEN}"
                    terraform init --backend-config=dev.hcl
                    terraform plan -var-file="dev.tfvars.json"
                    aws --version
                    helm version
                    kubectl version
                    
                """
                }
                
                }
            }
        }
    }
}